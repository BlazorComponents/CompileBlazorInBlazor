@page "/blazor"
@using Microsoft.AspNetCore.Components
@inject CompileBlazorInBlazor.CompileService service

<h1>Compile and Run Blazor in Browser</h1>

<div>
    <div class="form-group">
        <label for="exampleFormControlTextarea1">Blazor Code</label>
        <textarea class="form-control" id="exampleFormControlTextarea1" rows="10" bind="@Code"></textarea>
    </div>
    <button type="button" class="btn btn-primary" onclick="@Run">Run</button>
    <div class="card">
        <div class="card-body">
            @Result
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <pre>@CompileText</pre>
        </div>
    </div>
</div>

@functions
{
    RenderFragment Result = null;
    string Code { get; set; }
    string CompileText { get; set; }

    public async Task Run()
    {
        try
        {
            service.CompileLog = new List<string>();
            var type = await service.CompileBlazor(Code);

            if (type != null)
            {
                service.CompileLog.Add("Render Blazor Component");
                Result = builder =>
                {
                    builder.OpenComponent(0, type);
                    builder.CloseComponent();
                };
            }
            else
            {
                service.CompileLog.Add("Blazor Component not found");
                Result = null;
            }
        }
        catch (Exception e)
        {
            service.CompileLog.Add(e.Message);
            service.CompileLog.Add(e.StackTrace);
            throw;
        }
        finally
        {
            CompileText = string.Join("\r\n", service.CompileLog);
            this.StateHasChanged();
        }
    }

    protected override void OnInit()
    {
        Code = @"
<h1>Counter</h1>

<p>Current count: @currentCount</p>

<button class=""btn btn-primary"" onclick=""@IncrementCount"">Click me</button>

@functions {
    int currentCount = 0;

    void IncrementCount()
    {
        currentCount++;
    }
}

";
    }

}